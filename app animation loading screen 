basic html
.
.<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Loading Screen with Skeleton</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div id="loading-screen">
        <div class="spinner"></div>
    </div>

    <div id="content" class="hidden">
        <div class="skeleton skeleton-header"></div>
        <div class="skeleton skeleton-image"></div>
        <div class="skeleton skeleton-text"></div>
        <div class="skeleton skeleton-text"></div>
        <div class="skeleton skeleton-footer"></div>
    </div>

    <script src="script.js"></script>
</body>
</html>
.
.
.
basic css
.
.
/* styles.css */
body {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
}

.hidden {
    display: none;
}

#loading-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.spinner {
    width: 50px;
    height: 50px;
    border: 8px solid rgba(0, 0, 0, 0.1);
    border-top: 8px solid #3498db;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.skeleton {
    background-color: #e0e0e0;
    background-image: linear-gradient(90deg, #e0e0e0 25%, #f5f5f5 50%, #e0e0e0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
    border-radius: 4px;
    margin: 20px;
}

.skeleton-header {
    height: 30px;
    width: 60%;
    margin-bottom: 20px;
}

.skeleton-image {
    height: 200px;
    width: 100%;
    margin-bottom: 20px;
}

.skeleton-text {
    height: 20px;
    width: 80%;
    margin-bottom: 10px;
}

.skeleton-footer {
    height: 20px;
    width: 40%;
    margin-top: 20px;
}

@keyframes loading {
    0% {
        background-position: 200% 0;
    }
    100% {
        background-position: -200% 0;
    }
}
.
.
.
advance animation 
.
.
/* animations.css */
@keyframes pulse {
    0% {
        background-color: #e0e0e0;
    }
    50% {
        background-color: #f5f5f5;
    }
    100% {
        background-color: #e0e0e0;
    }
}

.animated-skeleton {
    animation: pulse 1.5s infinite;
}
.
.
basic javascript 
 .
.
.
// script.js
document.addEventListener("DOMContentLoaded", function () {
    // Simulate content loading
    setTimeout(function () {
        document.getElementById("loading-screen").classList.add("hidden");
        document.getElementById("content").classList.remove("hidden");
    }, 3000); // 3-second delay to simulate loading
});

.
advance javascript 
.
.
.
// animations.js
function createSpinner() {
    const spinner = document.createElement('div');
    spinner.className = 'spinner';
    return spinner;
}

function showLoadingScreen() {
    const loadingScreen = document.getElementById('loading-screen');
    loadingScreen.appendChild(createSpinner());
}

document.addEventListener("DOMContentLoaded", showLoadingScreen);
.
.
.
utility function 
 
.
.
.

// utils.js
function fetchData(url) {
    return fetch(url)
        .then(response => response.json())
        .catch(error => console.error('Error fetching data:', error));
}



backend integration 


// api/data.js
const mockData = {
    title: "Sample Content",
    image: "img/placeholder.jpg",
    text: "This is some placeholder text for demonstration purposes."
};

function getData() {
    return new Promise((resolve) => {
        setTimeout(() => resolve(mockData), 2000);
    });
}

